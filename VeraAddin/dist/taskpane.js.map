{"version":3,"file":"taskpane.js","mappings":"86CAoBA,SAAsBA,I,kFAChBC,EAAoCC,SAASC,eAAe,kBAC1DC,EAAgBH,EAAeI,MACrCC,OAAOC,QAAQC,QAAQC,KAAKC,gBAAgBC,SAAS,CAAE,qBAAsBP,IAAiB,SAAUQ,GAClGA,EAAYC,SAAWP,OAAOQ,kBAAkBC,UAElDC,QAAQC,IAAI,4BAGZD,QAAQC,IAAI,0BAA4BC,KAAKC,UAAUP,EAAYQ,W,wEAvBzE,QACA,QACA,QAIAd,OAAOe,SAAQ,SAACC,GACVA,EAAKC,OAASjB,OAAOkB,SAASC,SAChCC,EAAExB,UAAUyB,OAAM,WAChBzB,SAASC,eAAe,SAASyB,QAAU5B,QAKjD,S,0JCnBI6B,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QCrBfJ,EAAoBQ,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,G,MCAxB,IAAIC,EACAd,EAAoBQ,EAAEO,gBAAeD,EAAYd,EAAoBQ,EAAEQ,SAAW,IACtF,IAAI5C,EAAW4B,EAAoBQ,EAAEpC,SACrC,IAAK0C,GAAa1C,IACbA,EAAS6C,gBACZH,EAAY1C,EAAS6C,cAAcC,MAC/BJ,GAAW,CACf,IAAIK,EAAU/C,EAASgD,qBAAqB,UACzCD,EAAQE,SAAQP,EAAYK,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKJ,EAAW,MAAM,IAAIQ,MAAM,yDAChCR,EAAYA,EAAUS,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFvB,EAAoBwB,EAAIV,G,GCZEd,EAAoB,O","sources":["webpack:///./src/taskpane/taskpane.ts?","webpack:///webpack/bootstrap?","webpack:///webpack/runtime/global?","webpack:///webpack/runtime/publicPath?","webpack:///webpack/startup?"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n// images references in the manifest\nimport \"../../assets/icon-16.png\";\nimport \"../../assets/icon-32.png\";\nimport \"../../assets/icon-80.png\";\n\n/* global document, Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Outlook) {\n    $(document).ready(function () {\n      document.getElementById(\"Apply\").onclick = run;\n    });\n  }\n});\n\nexport async function run() {\n  let classification: HTMLSelectElement = document.getElementById(\"Classification\") as HTMLSelectElement;\n  const selectedValue = classification.value;\n  Office.context.mailbox.item.internetHeaders.setAsync({ \"x-hs-customheaders\": selectedValue }, function (asyncResult) {\n    if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n      // eslint-disable-next-line no-undef\n      console.log(\"Successfully set headers\");\n    } else {\n      // eslint-disable-next-line no-undef\n      console.log(\"Error setting headers: \" + JSON.stringify(asyncResult.error));\n    }\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4183);\n"],"names":["run","classification","document","getElementById","selectedValue","value","Office","context","mailbox","item","internetHeaders","setAsync","asyncResult","status","AsyncResultStatus","Succeeded","console","log","JSON","stringify","error","onReady","info","host","HostType","Outlook","$","ready","onclick","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p"],"sourceRoot":""}